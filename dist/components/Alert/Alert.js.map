{"version":3,"sources":["components/Alert/Alert.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAA4E,eAAe,CAAC,CAAA;AAC5F,uBAA8B,iBAAiB,CAAC,CAAA;AAOhD;IAA2B,yBAAS;IAOhC,eAAoB,GAAc;QAC9B,iBAAO,CAAC;QADQ,QAAG,GAAH,GAAG,CAAW;QANzB,cAAS,GAAY,KAAK,CAAC;QAC3B,gBAAW,GAAY,IAAI,CAAC;QAC5B,SAAI,GAAW,SAAS,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QACtB,oBAAe,GAAG,IAAI,mBAAY,EAAO,CAAC;IAIpD,CAAC;IAED,2BAAW,GAAX,UAAY,KAAU;QAAtB,iBAYC;QAXG,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;YACjE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACvE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CAAC;YAC7E,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC;QACvE,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,UAAU,CAAC;gBACP,KAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACxB,CAAC;IACL,CAAC;IAED,qBAAK,GAAL;QAAA,iBAUC;QATG,EAAE,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;YAC/C,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACvE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAC;YAC7E,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC;QACvE,CAAC;QACD,UAAU,CAAC;YACP,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAlCD;QAAC,YAAK,EAAE;;4CAAA;IACR;QAAC,YAAK,EAAE;;8CAAA;IACR;QAAC,YAAK,EAAE;;uCAAA;IACR;QAAC,YAAK,EAAE;;6CAAA;IACR;QAAC,aAAM,EAAE;;kDAAA;IAVb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,8kBAA8kB;YACxlB,UAAU,EAAE,CAAC,wBAAe,CAAC;SAChC,CAAC;;aAAA;IAqCF,YAAC;AAAD,CApCA,AAoCC,CApC0B,gBAAS,GAoCnC;AApCY,aAAK,QAoCjB,CAAA;AAEU,uBAAe,GAAG;IACzB,KAAK;CACR,CAAC","file":"components/Alert/Alert.js","sourcesContent":["import {Component, ElementRef, Input, Output, EventEmitter, OnChanges} from '@angular/core';\nimport {CORE_DIRECTIVES} from '@angular/common';\n\n@Component({\n    selector: 'alert',\n    template: \"\\n      <div\\n          *ngIf=\\\"displayed\\\"\\n          role=\\\"alert\\\"\\n          class=\\\"alert fuel-ui-alert-fade-in\\\"\\n          [ngClass]=\\\"{'alert-success': type === 'success', 'alert-info': type === 'info', 'alert-warning': type === 'warning', 'alert-danger': type === 'danger' }\\\" >\\n          <button *ngIf=\\\"closeButton\\\" (click)=\\\"close()\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&#215;</span>\\n              <span class=\\\"sr-only\\\">Close</span>\\n          </button>\\n          <ng-content></ng-content>\\n      </div>\\n    \",\n    directives: [CORE_DIRECTIVES]\n})\nexport class Alert extends OnChanges {\n    @Input() displayed: boolean = false;\n    @Input() closeButton: boolean = true;\n    @Input() type: string = 'success';\n    @Input() closeDelay: number = 0;\n    @Output() displayedChange = new EventEmitter<any>();\n\n    constructor(private _el:ElementRef){\n        super();\n    }\n\n    ngOnChanges(event: any): void {\n        if(this.displayed && this._el.nativeElement.querySelector('.alert')){\n            let classes = this._el.nativeElement.querySelector('.alert').className;\n            classes = classes.replace('fuel-ui-alert-fade-out', 'fuel-ui-alert-fade-in');\n            this._el.nativeElement.querySelector('.alert').className = classes;\n        }\n\n        if(this.closeDelay > 0) {\n            setTimeout(() => {\n                this.close();\n            }, this.closeDelay);\n        }\n    }\n\n    close():void{\n        if(this._el.nativeElement.querySelector('.alert')){\n            let classes = this._el.nativeElement.querySelector('.alert').className;\n            classes = classes.replace('fuel-ui-alert-fade-in', 'fuel-ui-alert-fade-out');\n            this._el.nativeElement.querySelector('.alert').className = classes;\n        }\n        setTimeout(() => {\n            this.displayed = false;\n            this.displayedChange.next(null);\n        }, 1000);\n    }\n}\n\nexport var ALERT_PROVIDERS = [\n    Alert\n];"],"sourceRoot":"/source/"}