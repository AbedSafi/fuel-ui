{"version":3,"sources":["components/Alert/Alert.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiE,eAAe,CAAC,CAAA;AACjF,uBAA8B,iBAAiB,CAAC,CAAA;AAOhD;IAOI,eAAY,EAAc;QALjB,cAAS,GAAY,KAAK,CAAC;QAC3B,gBAAW,GAAY,IAAI,CAAC;QAC5B,SAAI,GAAW,SAAS,CAAC;QACxB,oBAAe,GAAG,IAAI,mBAAY,EAAO,CAAC;QAGhD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC;IAChC,CAAC;IAED,0BAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,qBAAK,GAAL;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAhBD;QAAC,YAAK,EAAE;;4CAAA;IACR;QAAC,YAAK,EAAE;;8CAAA;IACR;QAAC,YAAK,EAAE;;uCAAA;IACR;QAAC,aAAM,EAAE;;kDAAA;IAVb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,8kBAA8kB;YACxlB,UAAU,EAAE,CAAC,wBAAe,CAAC;SAChC,CAAC;;aAAA;IAoBF,YAAC;AAAD,CAnBA,AAmBC,IAAA;AAnBY,aAAK,QAmBjB,CAAA;AAEU,uBAAe,GAAG;IACzB,KAAK;CACR,CAAC","file":"components/Alert/Alert.js","sourcesContent":["import {Component, ElementRef, Input, Output, EventEmitter} from '@angular/core';\nimport {CORE_DIRECTIVES} from '@angular/common';\n\n@Component({\n    selector: 'alert',\n    template: \"\\n      <div\\n          *ngIf=\\\"displayed\\\"\\n          role=\\\"alert\\\"\\n          class=\\\"alert fuel-ui-alert-fade-in\\\"\\n          [ngClass]=\\\"{'alert-success': type === 'success', 'alert-info': type === 'info', 'alert-warning': type === 'warning', 'alert-danger': type === 'danger' }\\\" >\\n          <button *ngIf=\\\"closeButton\\\" (click)=\\\"close()\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&#215;</span>\\n              <span class=\\\"sr-only\\\">Close</span>\\n          </button>\\n          <ng-content></ng-content>\\n      </div>\\n    \",\n    directives: [CORE_DIRECTIVES]\n})\nexport class Alert {\n    private _el:HTMLElement;\n    @Input() displayed: boolean = false;\n    @Input() closeButton: boolean = true;\n    @Input() type: string = 'success';\n    @Output() displayedChange = new EventEmitter<any>();\n\n    constructor(el: ElementRef){\n        this._el = el.nativeElement;\n    }\n\n    getElement(): HTMLElement{\n        return this._el;\n    }\n\n    close():void{\n        this.displayed = false;\n        this.displayedChange.next(null);\n    }\n}\n\nexport var ALERT_PROVIDERS = [\n    Alert\n];"],"sourceRoot":"/source/"}