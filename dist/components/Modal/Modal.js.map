{"version":3,"sources":["components/Modal/Modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiE,eAAe,CAAC,CAAA;AACjF,uBAA8B,iBAAiB,CAAC,CAAA;AAChD,kCAAgC,8CAA8C,CAAC,CAAA;AAW/E;IAOC,eAAY,EAAc;QAL1B,cAAS,GAAY,KAAK,CAAC;QAClB,mBAAc,GAAW,IAAI,CAAC;QAC9B,gBAAW,GAAW,IAAI,CAAC;QACxB,eAAU,GAAU,EAAE,CAAC;QAG5B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC;IAChC,CAAC;IAEJ,4BAAY,GAAZ,UAAa,CAAM;QAClB,EAAE,CAAA,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA,CAAC;YACvB,EAAE,CAAA,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,IAAI,oBAAoB,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,IAAI,cAAc,CAAC;gBAC7F,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC;IACF,CAAC;IAED,0BAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEE,0BAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEJ,yBAAS,GAAT,UAAU,WAAoB;QAA9B,iBAyBC;QAxBA,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAEzB,EAAE,CAAA,CAAC,WAAW,KAAK,SAAS,CAAC,CAAA,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAClC,CAAC;QACD,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC9B,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAEpC,EAAE,CAAA,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,OAAO,EAAE,UAAC,CAAQ;oBAC5D,EAAE,CAAA,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,IAAI,oBAAoB,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,IAAI,cAAc,CAAC;wBAC7F,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAhDD;QAAC,YAAK,EAAE;;iDAAA;IACR;QAAC,YAAK,EAAE;;8CAAA;IACL;QAAC,YAAK,EAAE;;6CAAA;IAdZ;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAC;gBACJ,SAAS,EAAE,sBAAsB;aACjC;YACD,MAAM,EAAE,CAAC,0XAA0X,CAAC;YACpY,QAAQ,EAAE,68BAA68B;YACv9B,UAAU,EAAE,CAAC,wBAAe,EAAE,qCAAiB,CAAC;SAChD,CAAC;;aAAA;IAqDF,YAAC;AAAD,CApDA,AAoDC,IAAA;AApDY,aAAK,QAoDjB,CAAA;AAEU,uBAAe,GAAG;IAC5B,KAAK;CACL,CAAC","file":"components/Modal/Modal.js","sourcesContent":["import {Component, ElementRef, Input, Output, EventEmitter} from 'angular2/core';\nimport {CORE_DIRECTIVES} from 'angular2/common';\nimport {AnimationListener} from \"../../directives/Animation/AnimationListener\";\n\n@Component({\n\tselector: 'modal',\n\thost:{\n\t\t'(click)': 'clickElement($event)'\n\t},\n\tstyles: [\"\\n   .customFadeIn {\\n     -webkit-animation-name: fadeInDown;\\n     -moz-animation-name: fadeInDown;\\n     animation-name: fadeInDown;\\n     -webkit-animation-duration: 1s;\\n     -moz-animation-duration: 1s;\\n     animation-duration: 1s;\\n     -webkit-animation-timing-function: ease;\\n     -moz-animation-timing-function: ease;\\n     animation-timing-function: ease; }\\n    \"],\n\ttemplate: \"\\n   <div class=\\\"modal\\\" [ngClass]=\\\"{customFadeIn: displayed}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" [style.display]=\\\"displayed ? 'block' : 'none'\\\">\\n       <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n           <div class=\\\"modal-content\\\">\\n               <div class=\\\"modal-header\\\">\\n                   <button *ngIf=\\\"closeButton\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"showModal(false)\\\">\\n                       <span aria-hidden=\\\"true\\\">&#215;</span>\\n                       <span class=\\\"sr-only\\\">Close</span>\\n                   </button>\\n                   <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{modalTitle}}</h4>\\n               </div>\\n               <ng-content></ng-content>\\n           </div>\\n       </div>\\n   </div>\\n   <div class=\\\"modal-backdrop\\\" [ngClass]=\\\"{fade: displayed, in: displayed}\\\" [style.display]=\\\"displayed ? 'block' : 'none'\\\"></div>\\n    \",\n\tdirectives: [CORE_DIRECTIVES, AnimationListener]\n})\nexport class Modal {\n\tprivate _el:HTMLElement;\n\tdisplayed: boolean = false;\n\t@Input() closeOnUnfocus:boolean = true;\n\t@Input() closeButton:boolean = true;\n    @Input() modalTitle:string = '';\n\n\tconstructor(el: ElementRef) {\n        this._el = el.nativeElement;\n    }\n\n\tclickElement(e: any){\n\t\tif(this.closeOnUnfocus){\n\t\t\tif(e.srcElement.className == 'modal customFadeIn' || e.srcElement.className == 'modal-dialog')\n\t\t\t\tthis.showModal(false);\n\t\t}\n\t}\n\n\tgetElement(): HTMLElement{\n\t\treturn this._el;\n\t}\n    \n    closeModal(): boolean {\n        return this.showModal(false);\n    }\n\n\tshowModal(isDisplayed: boolean): boolean {\n\t\tvar body = document.body;\n\n\t\tif(isDisplayed === undefined){\n\t\t\tthis.displayed = !this.displayed;\n\t\t}\n\t\telse{\n\t\t\tthis.displayed = isDisplayed;\n\t\t}\n\n\t\tif(this.displayed){\n\t\t\tbody.classList.add('modal-open');\n\t\t}\n\t\telse{\n\t\t\tbody.classList.remove('modal-open');\n\n\t\t\tif(this.closeOnUnfocus){\n\t\t\t\tthis._el.childNodes[0].removeEventListener('click', (e: Event) => {\n\t\t\t\t\tif(e.srcElement.className == 'modal customFadeIn' || e.srcElement.className == 'modal-dialog')\n\t\t\t\t\t\tthis.showModal(false);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport var MODAL_PROVIDERS = [\n\tModal\n];"],"sourceRoot":"/source/"}