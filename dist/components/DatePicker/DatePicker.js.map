{"version":3,"sources":["components/DatePicker/DatePicker.ts"],"names":[],"mappings":"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","file":"components/DatePicker/DatePicker.js","sourcesContent":["import {Component, OnInit, OnChanges, AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Renderer} from '@angular/core';\nimport {Input, Output, EventEmitter, ElementRef, ViewChild, ContentChildren, ContentChild, QueryList} from '@angular/core';\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from '@angular/common';\nimport {DatePickerCalendar} from \"./DatePickerCalendar\";\nimport {DatePickerField, DatePickerFieldStyler} from \"./DatePickerField\";\nimport {INFINITE_SCROLLER_PROVIDERS, InfiniteScroller} from \"../InfiniteScroller/InfiniteScroller\";\nimport {MobileDetection} from \"../../utilities/DetectionUtils\";\nimport {DateRange, DateUtils} from \"../../utilities/utilities\";\n\n@Component({\n    selector: \"date-picker\",\n    styles: [\"\\n      .date-picker-overlay {\\n        background-color: transparent;\\n        display: block;\\n        position: fixed;\\n        top: 0;\\n        right: 0;\\n        bottom: 0;\\n        left: 0;\\n        z-index: 900; }\\n        @media (max-width: 480px), screen and (max-device-width: 480px) {\\n          .date-picker-overlay {\\n            background-color: #55595c;\\n            opacity: .75; } }\\n\\n      .date-picker-content {\\n        position: relative;\\n        top: 0;\\n        left: 0; }\\n\\n      .fuel-ui-datepicker-input-group input:read-only, .fuel-ui-datepicker-input-group .form-control[readonly] {\\n        background-color: #fff !important; }\\n\\n      .fuel-ui-datepicker-input-group .input-group-addon {\\n        background-color: #fff !important; }\\n\\n      .date-picker-component {\\n        border: 1px solid #eceeef;\\n        z-index: 1000;\\n        background-color: #fff;\\n        font-size: .75rem;\\n        position: absolute;\\n        width: 350px;\\n        height: auto;\\n        top: 0;\\n        left: 0;\\n        overflow: hidden;\\n        border-radius: 0.3rem;\\n        -webkit-transition: all 0.1s ease;\\n        -moz-transition: all 0.1s ease;\\n        transition: all 0.1s ease; }\\n        @media (max-width: 480px), screen and (max-device-width: 480px) {\\n          .date-picker-component {\\n            width: 90%;\\n            height: 90%;\\n            position: fixed;\\n            top: 5%;\\n            left: 5%; } }\\n        .date-picker-component .input-group {\\n          z-index: 110; }\\n        .date-picker-component .container {\\n          height: 100%; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            .date-picker-component .container .calendar-container {\\n              height: 91%; } }\\n          .date-picker-component .container header {\\n            position: relative;\\n            top: 0;\\n            left: 0;\\n            vertical-align: middle;\\n            background-color: #fff; }\\n            .date-picker-component .container header .days-of-week {\\n              background-color: #0275d8;\\n              color: #fff; }\\n            .date-picker-component .container header table {\\n              border-top: none !important; }\\n              .date-picker-component .container header table th, .date-picker-component .container header table td {\\n                text-align: center; }\\n            .date-picker-component .container header button {\\n              border: none;\\n              border-radius: 0;\\n              color: #0275d8;\\n              background-color: #fff;\\n              width: 15%; }\\n              .date-picker-component .container header button:active {\\n                background-color: #eceeef; }\\n              .date-picker-component .container header button.button-disable {\\n                color: #eceeef;\\n                cursor: default; }\\n            .date-picker-component .container header .date-range {\\n              width: 70%; }\\n              .date-picker-component .container header .date-range span {\\n                background-color: #eceeef;\\n                border-left: none;\\n                border-right: none; }\\n            .date-picker-component .container header .input-group-addon {\\n              border: none;\\n              background-color: #fff !important; }\\n            .date-picker-component .container header input {\\n              border: none;\\n              display: inline-block;\\n              margin: 1px auto 0 auto;\\n              cursor: pointer;\\n              background-color: #fff !important; }\\n            .date-picker-component .container header input:read-only, .date-picker-component .container header .form-control[readonly] {\\n              background-color: #fff !important; }\\n            .date-picker-component .container header input.target {\\n              color: #0275d8; }\\n              .date-picker-component .container header input.target::-webkit-input-placeholder {\\n                color: #0275d8; }\\n              .date-picker-component .container header input.target::-moz-placeholder {\\n                color: #0275d8; }\\n              .date-picker-component .container header input.target:-moz-placeholder {\\n                color: #0275d8; }\\n              .date-picker-component .container header input.target:-ms-input-placeholder {\\n                color: #0275d8; }\\n    \"],\n    template: \"\\n      <div class=\\\"date-picker-overlay\\\" aria-hidden=\\\"true\\\"\\n          *ngIf=\\\"calendarDisplayed\\\" \\n          (click)=\\\"hideCalendar()\\\">\\n      </div>\\n\\n      <div class=\\\"date-picker-content\\\">\\n          <ng-content></ng-content>\\n\\n          <div class=\\\"date-picker-component\\\" *ngIf=\\\"calendarDisplayed\\\"\\n              [style.left]=\\\"calendarX\\\"\\n              [style.top]=\\\"calendarY\\\">\\n              <div class=\\\"container p-a-0\\\">\\n                  <header>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary pull-left\\\"\\n                          (click)=\\\"scrollPrevMonth()\\\" [class.button-disable]=\\\"disablePrev()\\\">\\n                          <i class=\\\"fa fa-chevron-left\\\"></i>\\n                      </button>\\n                      <div class=\\\"date-range pull-left input-group\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control text-xs-center\\\" \\n                              id=\\\"startDate\\\" [(ngModel)]=\\\"inputDate\\\" readonly />\\n                      </div>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary pull-right\\\"\\n                          (click)=\\\"scrollNextMonth()\\\" [class.button-disable]=\\\"disableNext()\\\">\\n                          <i class=\\\"fa fa-chevron-right\\\"></i>\\n                      </button>\\n                      <table class=\\\"table m-b-0 days-of-week\\\">\\n                          <tbody>\\n                          <tr>\\n                              <th>S</th>\\n                              <th>M</th>\\n                              <th>T</th>\\n                              <th>W</th>\\n                              <th>T</th>\\n                              <th>F</th>\\n                              <th>S</th>\\n                          </tr>\\n                          </tbody>\\n                      </table>\\n                  </header>\\n                  <div class=\\\"calendar-container m-a-0\\\">\\n                      <infinite-scroller\\n                          (next)=\\\"addNextMonth()\\\"\\n                          (prev)=\\\"addPrevMonth()\\\"\\n                          distance=\\\"100\\\"\\n                          [height]=\\\"calendarHeight\\\"\\n                          [hideScrollbar]=\\\"true\\\">\\n                          <date-picker-calendar scroll-item\\n                              *ngFor=\\\"let month of calendarMonths; let i=index\\\" \\n                              [id]=\\\"i\\\"\\n                              [minDate]=\\\"minDate\\\" [maxDate]=\\\"maxDate\\\"\\n                              [dateFilter]=\\\"dateFilter\\\"\\n                              [currentMonth]=\\\"month\\\" \\n                              [(selectedDate)]=\\\"selectedDate\\\">\\n                              {{i}}\\n                          </date-picker-calendar>\\n                      </infinite-scroller>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n    \",\n    directives: [DatePickerCalendar, INFINITE_SCROLLER_PROVIDERS, CORE_DIRECTIVES, FORM_DIRECTIVES],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatePicker implements OnInit, AfterContentInit {\n    _minDate: Date = new Date(1900, 0, 1);\n    _maxDate: Date = new Date(2200, 0, 1);\n\n    @Input()\n    set minDate(value: Date | string) {\n        this._minDate = DateUtils.handleDateInput(value);\n    }\n    get minDate(): Date | string { return this._minDate; };\n\n    @Input()\n    set maxDate(value: Date | string) {\n        this._maxDate = DateUtils.handleDateInput(value);\n    }\n    get maxDate(): Date | string { return this._maxDate; }\n\n    @Input() dateFilter: (d: Date) => boolean;\n\n    @Output() valueChange = new EventEmitter();\n    @Input()\n    set value(value: any) {\n        this._selectedDate = DateUtils.handleDateInput(value);\n    }\n\n    get inputDate(): string {\n        return this.dateField != null ? this.dateField.value : \"\";\n    }\n\n    @ViewChild(InfiniteScroller)\n    calendarScroller: InfiniteScroller;\n\n    @ContentChild(DatePickerField)\n    dateField: DatePickerField;\n\n    @ContentChildren(DatePickerFieldStyler)\n    dateFieldIcons: QueryList<DatePickerFieldStyler>;\n\n    protected _selectedDate: Date;\n    get selectedDate(): Date { return this._selectedDate; };\n    set selectedDate(value: Date) {\n        this._selectedDate = value;\n        if (this.dateField != null && this.dateField.date.getTime() != value.getTime())\n            this.dateField.date = value;\n        this.valueChange.next(this.selectedDate);\n        this.hideCalendar();\n    }\n\n    calendarDisplayed: boolean = false;\n    calendarX: string = \"5%\";\n    calendarY: string = \"5%\";\n    calendarHeight: string = MobileDetection.isAny() || window.innerWidth <= 480 || window.outerWidth <= 480 ? \"auto\" : \"300px\";\n\n    calendarMonths: Date[] = [];\n\n    _preGenMonths = 2;\n\n    changeDetector: ChangeDetectorRef;\n    renderer: Renderer;\n\n    initialScroll = true;\n\n    constructor(changeDetector: ChangeDetectorRef, renderer: Renderer) {\n        this.changeDetector = changeDetector;\n        this.renderer = renderer;\n\n        this.generateMonths();\n    }\n\n    ngOnInit(): void {\n        this.scrollerReset();\n    }\n\n    ngAfterContentInit(): void {\n        if (this.dateField == undefined)\n            throw \"Fuel-UI Error: DatePicker missing date field\";\n\n        var parsedDate = DateUtils.handleDateInput(this.dateField.value);\n        if (this.dateField.value.length > 0 && DateUtils.isValidDate(parsedDate))\n            this.selectedDate = parsedDate;\n\n        this.dateField.select\n            .subscribe((event: MouseEvent) => {\n                this.showCalendar(event);\n            });\n\n        /* removed due to binding issues in FF\n        this.dateField.dateChange\n            .subscribe((date: Date) => {\n                if(date.getTime() != this.selectedDate.getTime())\n                    this.selectedDate = date;\n            });*/\n\n        this.dateFieldIcons.map((i: DatePickerFieldStyler) => {\n            i.selectEvent.subscribe((event: Event) => {\n                this.showCalendar(event);\n            });\n        });\n        \n        this.generateMonths();\n    }\n\n    generateMonths(): void {\n        var currentDate = this.selectedDate != null ? this.selectedDate : new Date();\n        this.calendarMonths = [\n            new Date(currentDate.getFullYear(), currentDate.getMonth() - 1),\n            new Date(currentDate.getFullYear(), currentDate.getMonth())\n        ]\n\n        for (let i = 0; i < this._preGenMonths; i++) {\n            let earliestDate = this.calendarMonths[0];\n            let latestDate = this.calendarMonths[this.calendarMonths.length - 1];\n            if (this.canPrevMonth)\n                this.calendarMonths.unshift(new Date(earliestDate.getFullYear(), earliestDate.getMonth() - 1));\n            if (this.canNextMonth)\n                this.calendarMonths.push(new Date(latestDate.getFullYear(), latestDate.getMonth() + 1));\n        }\n    }\n\n    scrollerReset(): void {\n        setTimeout(() => {\n            var currentDate = this.selectedDate != null ? this.selectedDate : new Date();\n            if (this.calendarScroller == null)\n                return;\n\n            let scrollToMonth = this.calendarMonths.findIndex((m: Date) => {\n                return m.getFullYear() == currentDate.getFullYear()\n                    && m.getMonth() == currentDate.getMonth()\n            });\n\n            if(this.initialScroll) {\n                this.initialScroll = false;\n                this.calendarScroller.container.scrollTop =\n                    this.calendarScroller.itemQuery.toArray()[scrollToMonth]\n                        .element.offsetTop - 20;\n            }\n\n            this.calendarScroller.scrollToIndex(scrollToMonth);\n        }, 1);\n    }\n\n    toggleCalendar(event: Event): void {\n        if (!this.calendarDisplayed)\n            this.showCalendar(event);\n        else\n            this.hideCalendar();\n    }\n\n    showCalendar(event: Event): void {\n        if (event != null && !MobileDetection.isAny()) {\n            var clickedTarget = event.target ? (<HTMLElement>event.target).parentElement : event.srcElement.parentElement;\n            if (clickedTarget.classList.contains(\"input-group-addon\"))\n                clickedTarget = clickedTarget.parentElement;\n            this.calendarX = clickedTarget.offsetLeft + \"px\";\n            if (screen.height - clickedTarget.getBoundingClientRect().bottom <= 500) {\n                this.calendarY = (clickedTarget.offsetTop - 300) + \"px\";\n            } else {\n                this.calendarY = clickedTarget.offsetTop + \"px\";\n            }\n        } else if (MobileDetection.isAny()) {\n            this.calendarX = \"5%\";\n            this.calendarY = \"5%\";\n        }\n\n        this.scrollerReset();\n\n        this.changeDetector.markForCheck();\n        this.calendarDisplayed = true;\n    }\n\n    hideCalendar(): void {\n        this.calendarDisplayed = false;\n        this.initialScroll = true;\n        this.changeDetector.markForCheck();\n    }\n\n    get canPrevMonth(): boolean {\n        var currentDate = this.calendarMonths[0];\n        var prevDate =\n            new Date(currentDate.getFullYear(), currentDate.getMonth() - 1);\n        var compareDate =\n            new Date(this._minDate.getFullYear(), this._minDate.getMonth());\n        return prevDate >= compareDate;\n    }\n\n    get canNextMonth(): boolean {\n        var currentDate = this.calendarMonths[this.calendarMonths.length - 1];\n        var nextDate =\n            new Date(currentDate.getFullYear(), currentDate.getMonth() + 1);\n        var compareDate =\n            new Date(this._maxDate.getFullYear(), this._maxDate.getMonth());\n\n        return nextDate <= compareDate;\n    }\n\n    disablePrev(): boolean {\n        return this.calendarScroller ? this.calendarScroller.isTop() : false;\n    }\n\n    disableNext(): boolean {\n        return this.calendarScroller ? this.calendarScroller.isBottom() : false;\n    }\n\n    scrollPrevMonth(): void {\n        if (this.calendarScroller.topIndex == 0)\n            this.addPrevMonth();\n\n        setTimeout(() => {\n            this.calendarScroller.scrollToIndex(this.calendarScroller.topIndex - 1);\n        }, 10);\n    }\n\n    scrollNextMonth(): void {\n        setTimeout(() => {\n            this.calendarScroller.scrollToIndex(this.calendarScroller.topIndex + 1);\n        }, 10);\n    }\n\n    addNextMonth(): void {\n        if (!this.canNextMonth)\n            return;\n\n        var lastMonth = this.calendarMonths[this.calendarMonths.length - 1];\n        var nextMonth = new Date(lastMonth.getFullYear(), lastMonth.getMonth() + 1);\n        this.calendarMonths.push(nextMonth);\n        this.changeDetector.markForCheck();\n    }\n\n    addPrevMonth(): void {\n        if (!this.canPrevMonth)\n            return;\n\n        var firstMonth = this.calendarMonths[0];\n        var prevMonth = new Date(firstMonth.getFullYear(), firstMonth.getMonth() - 1);\n        this.calendarMonths.unshift(prevMonth);\n        this.changeDetector.markForCheck();\n    }\n}\n\n"],"sourceRoot":"/source/"}