{"version":3,"sources":["components/DatePicker/DateRangePicker.ts"],"names":[],"mappings":"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","file":"components/DatePicker/DateRangePicker.js","sourcesContent":["import {Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef} from \"angular2/core\";\nimport {EventEmitter, ElementRef, ViewChild, ViewChildren, QueryList} from \"angular2/core\";\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from \"angular2/common\";\nimport {DateRange} from \"../../utilities/DateUtils\";\nimport {MobileDetection} from \"../../utilities/DetectionUtils\";\nimport {DatePicker} from \"./DatePicker\";\nimport {DatePickerCalendar} from \"./DatePickerCalendar\";\nimport {InfiniteScroller, INFINITE_SCROLLER_PROVIDERS} from \"../InfiniteScroller/InfiniteScroller\";\n\n@Component({\n    selector: \"date-range-picker\",\n    styles: [\"\\n      .date-picker-overlay {\\n        background-color: transparent;\\n        display: block;\\n        position: fixed;\\n        top: 0;\\n        right: 0;\\n        bottom: 0;\\n        left: 0;\\n        z-index: 100; }\\n        @media (max-width: 480px), screen and (max-device-width: 480px) {\\n          .date-picker-overlay {\\n            background-color: #55595c;\\n            opacity: .75; } }\\n\\n      .date-picker-component {\\n        border: 1px solid #eceeef;\\n        z-index: 120;\\n        background-color: #fff;\\n        font-size: .75rem;\\n        position: absolute;\\n        width: 350px;\\n        height: auto;\\n        top: 0;\\n        left: 0;\\n        overflow: hidden;\\n        border-radius: 0.3rem;\\n        -webkit-transition: all 0.1s ease;\\n        -moz-transition: all 0.1s ease;\\n        transition: all 0.1s ease; }\\n        @media (max-width: 480px), screen and (max-device-width: 480px) {\\n          .date-picker-component {\\n            width: 90%;\\n            height: 90%;\\n            position: fixed;\\n            top: 5%;\\n            left: 5%;\\n            font-size: 1.25rem; } }\\n\\n      table {\\n        font-size: .75rem; }\\n        @media (max-width: 480px), screen and (max-device-width: 480px) {\\n          table {\\n            font-size: 1.25rem; } }\\n\\n      .input-group {\\n        z-index: 110; }\\n\\n      input:read-only {\\n        background-color: #fff; }\\n\\n      .input-group-addon {\\n        background-color: #fff; }\\n\\n      header {\\n        position: relative;\\n        top: 0;\\n        left: 0;\\n        vertical-align: middle;\\n        background-color: #fff; }\\n        header .days-of-week {\\n          background-color: #0275d8;\\n          color: #fff; }\\n        header table {\\n          border-top: none !important; }\\n        header th, header td {\\n          text-align: center; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            header th, header td {\\n              font-size: 2.5rem; } }\\n        header button {\\n          border: none;\\n          border-radius: 0;\\n          color: #0275d8;\\n          background-color: #fff;\\n          width: 15%; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            header button {\\n              font-size: 2.5rem;\\n              margin-top: .5rem; } }\\n        header button:active {\\n          background-color: #eceeef; }\\n        header .button-disable {\\n          color: #eceeef;\\n          cursor: default; }\\n        header .date-range {\\n          width: 70%; }\\n        header .date-range span {\\n          background-color: #eceeef;\\n          border-left: none;\\n          border-right: none; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            header .date-range span {\\n              font-size: 2.5rem; } }\\n        header .input-group-addon {\\n          border: none;\\n          background-color: #fff !important; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            header .input-group-addon {\\n              font-size: 1.5rem; } }\\n        header input {\\n          border: none;\\n          display: inline-block;\\n          margin: 1px auto 0 auto;\\n          cursor: pointer; }\\n          @media (max-width: 480px), screen and (max-device-width: 480px) {\\n            header input {\\n              font-size: 2.5rem; } }\\n        header input:read-only {\\n          background-color: #fff; }\\n        header input.target {\\n          color: #0275d8; }\\n          header input.target::-webkit-input-placeholder {\\n            color: #0275d8; }\\n          header input.target::-moz-placeholder {\\n            color: #0275d8; }\\n          header input.target:-moz-placeholder {\\n            color: #0275d8; }\\n          header input.target:-ms-input-placeholder {\\n            color: #0275d8; }\\n\\n      .prev-month, .next-month {\\n        position: absolute;\\n        top: 0;\\n        display: inline-block;\\n        z-index: 100;\\n        margin-top: .2rem; }\\n        .prev-month .btn-sm, .next-month .btn-sm {\\n          padding: .1rem .7rem; }\\n\\n      .prev-month {\\n        left: 0;\\n        margin-left: 4%; }\\n\\n      .next-month {\\n        right: 0;\\n        margin-right: 4%; }\\n\\n      .container {\\n        height: 100%; }\\n\\n      @media (max-width: 480px), screen and (max-device-width: 480px) {\\n        .calendar-container {\\n          height: 91%; } }\\n    \"],\n    template: \"\\n      <div class=\\\"date-picker-overlay\\\" aria-hidden=\\\"true\\\"\\n          *ngIf=\\\"calendarDisplayed\\\" \\n          (click)=\\\"hideCalendar()\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">{{startLabel}}</label>\\n          <div class=\\\"input-group\\\" \\n              (click)=\\\"toggleCalendar($event)\\\"\\n              (click)=\\\"focusStartDate()\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"startDate\\\"\\n                  [(ngModel)]=\\\"inputStartDate\\\" #dateField1 \\n                  placeholder=\\\"{{startLabel}}\\\" readonly />\\n              <span class=\\\"input-group-addon\\\" [class.input-group-addon-focus]=\\\"dateField1.focus\\\">\\n                  <i class=\\\"fa fa-calendar\\\"></i>\\n              </span>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"endDate\\\">{{endLabel}}</label>\\n          <div class=\\\"input-group\\\" \\n              (click)=\\\"toggleCalendar($event)\\\"\\n              (click)=\\\"focusEndDate()\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"endDate\\\"\\n                  [(ngModel)]=\\\"inputEndDate\\\" #dateField2 \\n                  placeholder=\\\"{{endLabel}}\\\" readonly />\\n              <span class=\\\"input-group-addon\\\" [class.input-group-addon-focus]=\\\"dateField2.focus\\\">\\n                  <i class=\\\"fa fa-calendar\\\"></i>\\n              </span>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"date-picker-component\\\" *ngIf=\\\"calendarDisplayed\\\">\\n          <div class=\\\"container p-a-0\\\">\\n              <header>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary pull-left\\\"\\n                      (click)=\\\"scrollPrevMonth()\\\" [class.button-disable]=\\\"disablePrev()\\\">\\n                      <i class=\\\"fa fa-chevron-left\\\"></i>\\n                  </button>\\n                  <div class=\\\"date-range pull-left input-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control text-xs-center\\\" \\n                          [class.target]=\\\"checkStartDateTarget()\\\"\\n                          (click)=\\\"focusStartDate()\\\"\\n                          id=\\\"startDate\\\" [(ngModel)]=\\\"inputStartDate\\\" readonly \\n                          placeholder=\\\"{{startLabel}}\\\" />\\n                      <span class=\\\"input-group-addon\\\"> - </span>\\n                      <input type=\\\"text\\\" class=\\\"form-control text-xs-center\\\" \\n                          [class.target]=\\\"checkEndDateTarget()\\\"\\n                          (click)=\\\"focusEndDate()\\\"\\n                          id=\\\"endDate\\\" [(ngModel)]=\\\"inputEndDate\\\" readonly \\n                          placeholder=\\\"{{endLabel}}\\\" />\\n                  </div>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary pull-right\\\"\\n                      (click)=\\\"scrollNextMonth()\\\" [class.button-disable]=\\\"disableNext()\\\">\\n                      <i class=\\\"fa fa-chevron-right\\\"></i>\\n                  </button>\\n                  <table class=\\\"table m-b-0 days-of-week\\\">\\n                      <tbody>\\n                      <tr>\\n                          <th>S</th>\\n                          <th>M</th>\\n                          <th>T</th>\\n                          <th>W</th>\\n                          <th>T</th>\\n                          <th>F</th>\\n                          <th>S</th>\\n                      </tr>\\n                      </tbody>\\n                  </table>\\n              </header>\\n              <div class=\\\"calendar-container m-a-0\\\">\\n                  <infinite-scroller\\n                      (next)=\\\"addNextMonth()\\\"\\n                      (prev)=\\\"addPrevMonth()\\\"\\n                      distance=\\\"100\\\"\\n                      height=\\\"{{calendarHeight}}\\\"\\n                      hideScrollbar=\\\"true\\\">\\n                      <date-picker-calendar scroll-item\\n                          *ngFor=\\\"#month of calendarMonths #i=index\\\" \\n                          [id]=\\\"i\\\"\\n                          [minDate]=\\\"minDate\\\" [maxDate]=\\\"maxDate\\\"\\n                          [dateFilter]=\\\"dateFilter\\\"\\n                          [currentMonth]=\\\"month\\\" \\n                          [(selectedDate)]=\\\"selectedDate\\\"\\n                          [(startDate)]=\\\"startDate\\\"\\n                          [(endDate)]=\\\"endDate\\\"\\n                          [dateTarget]=\\\"_dateTarget\\\" \\n                          (selectedDate)=\\\"hideCalendar()\\\">\\n                          {{i}}\\n                      </date-picker-calendar>\\n                  </infinite-scroller>\\n              </div>\\n          </div>\\n      </div>\\n    \",\n    directives: [DatePickerCalendar, INFINITE_SCROLLER_PROVIDERS, CORE_DIRECTIVES, FORM_DIRECTIVES],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DateRangePicker extends DatePicker {\n    @Output() valueChange = new EventEmitter();\n    @Input()\n    set value(value: any) {\n        this._selectedDate = this.handleRangeInput(value).start;\n    }\n\n    @Input()\n    set minDate(value: Date | string) {\n        this._minDate = this.handleDateInput(value);\n    }\n    get minDate(): Date | string { return this._minDate; };\n\n    @Input()\n    set maxDate(value: Date | string) {\n        this._maxDate = this.handleDateInput(value);\n    }\n    get maxDate(): Date | string { return this._maxDate; }\n\n    @Input() dateFilter: (d: Date) => boolean;\n\n    @ViewChild(InfiniteScroller)\n    calendarScroller: InfiniteScroller;\n\n    private _dateTarget: boolean = false;\n    calendarHeight: string = MobileDetection.isAny() || window.innerWidth <= 480 || window.outerWidth <= 480 ? \"auto\" : \"300px\";\n\n    get selectedDate(): Date { return this._selectedDate };\n    set selectedDate(value: Date) {\n        this._selectedDate = value;\n\n        if ((this._dateTarget && this.startDate != null && value < this.startDate)\n            || !this._dateTarget && this.endDate != null && value > this.endDate)\n            this._dateTarget = !this._dateTarget;\n\n        if (!this._dateTarget) {\n            this.inputStartDate = value.toLocaleDateString();\n            this.startDate = value;\n            if (this.startDateChange != null)\n                this.startDateChange.next(this._startDate);\n        }\n        else {\n            this.inputEndDate = value.toLocaleDateString();\n            this.endDate = value;\n            this.hideCalendar();\n            if (this.endDateChange != null)\n                this.endDateChange.next(this._endDate);\n        }\n\n        this._dateTarget = !this._dateTarget;\n\n        if (this.startDate != null && this.endDate != null) {\n            let startDate = new Date(this.startDate.getFullYear(), this.startDate.getMonth(), this.startDate.getDate());\n            let endDate = new Date(this.endDate.getFullYear(), this.endDate.getMonth(), this.endDate.getDate());\n\n            this.valueChange.next(new DateRange(startDate, endDate));\n        }\n        this.changeDetector.markForCheck();\n    }\n\n    @Input() startLabel: string;\n    @Input() endLabel: string;\n\n    private _startDate: Date;\n    private _endDate: Date;\n\n    @Output() startDateChange = new EventEmitter();\n    @Input()\n    set startDate(value: any) {\n        this._startDate = this.handleDateInput(value);\n        this.inputStartDate = this._startDate.toLocaleDateString();\n    }\n    get startDate(): any { return this._startDate; }\n\n    @Output() endDateChange = new EventEmitter();\n    @Input()\n    set endDate(value: any) {\n        this._endDate = this.handleDateInput(value);\n        this.inputEndDate = this._endDate.toLocaleDateString();\n    }\n    get endDate(): any { return this._endDate; }\n\n    private _inputStartDate: string = \"\";\n    get inputStartDate(): string { return this._inputStartDate };\n    set inputStartDate(value: string) {\n        this._inputStartDate = value;\n        this._selectedDate = new Date(value);\n        this.changeDetector.markForCheck();\n    }\n\n    private _inputEndDate: string = \"\";\n    get inputEndDate(): string { return this._inputEndDate };\n    set inputEndDate(value: string) {\n        this._inputEndDate = value;\n        this._selectedDate = new Date(value);\n        this.changeDetector.markForCheck();\n    }\n\n    constructor(changeDetector: ChangeDetectorRef) {\n        super(changeDetector);\n    }\n\n    handleRangeInput(value: any): DateRange {\n        console.log(value);\n        if (!(value instanceof DateRange))\n            throw \"DateRangePicker error: input is not of type DateRange\";\n\n        var range = <DateRange>value;\n\n        this.startDate = range.start;\n        this.endDate = range.end;\n        return range;\n    }\n\n    focusStartDate(): void {\n        this._dateTarget = false;\n    }\n\n    focusEndDate(): void {\n        this._dateTarget = true;\n    }\n\n    checkStartDateTarget(): boolean {\n        return !this._dateTarget;\n    }\n\n    checkEndDateTarget(): boolean {\n        return this._dateTarget;\n    }\n}"],"sourceRoot":"/source/"}