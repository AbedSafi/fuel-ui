{"version":3,"sources":["components/OffCanvasMenu/OffCanvasMenu.ts"],"names":[],"mappings":"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","file":"components/OffCanvasMenu/OffCanvasMenu.js","sourcesContent":["import {Component, Directive, Input, Output, QueryList, ContentChildren} from \"@angular/core\";\nimport {HostListener, EventEmitter} from \"@angular/core\";\nimport {OnInit, OnDestroy, AfterContentInit} from \"@angular/core\";\nimport {trigger, state, style, transition, animate, keyframes} from '@angular/core';\nimport {CORE_DIRECTIVES} from \"@angular/common\";\n\n@Directive({\n    selector: \"[offCanvasMenuClose], .off-canvas-menu-close\"\n})\nexport class OffCanvasMenuClose {\n    @Output()\n    close = new EventEmitter();\n\n    @HostListener(\"click\", [\"$event\"])\n    onClick(e): void {\n        this.close.next(null);\n    }\n}\n\n@Component({\n    selector: \"off-canvas-menu\",\n    template: \"\\n      <div *ngIf=\\\"isOpen\\\" @fade=\\\"overlayState\\\" class=\\\"off-canvas-menu-overlay\\\" \\n          (click)=\\\"toggleMenu()\\\"></div>\\n\\n      <div *ngIf=\\\"isOpen\\\" @open=\\\"openState\\\" class=\\\"off-canvas-menu\\\"\\n          [class.off-canvas-menu-left]=\\\"origin.toLowerCase() == 'left'\\\"\\n          [class.off-canvas-menu-right]=\\\"origin.toLowerCase() == 'right'\\\"\\n          [class.off-canvas-menu-top]=\\\"origin.toLowerCase() == 'top'\\\"\\n          [class.off-canvas-menu-bottom]=\\\"origin.toLowerCase() == 'bottom'\\\"\\n          [style.width]=\\\"computedWidth\\\"\\n          [style.height]=\\\"computedHeight\\\">\\n          <ng-content></ng-content>    \\n      </div>\\n    \",\n    styles: [\"\\n      .off-canvas-menu-overlay {\\n        display: block;\\n        position: fixed;\\n        top: 0;\\n        right: 0;\\n        bottom: 0;\\n        left: 0;\\n        z-index: 900;\\n        background-color: #55595c;\\n        opacity: 0; }\\n\\n      .off-canvas-menu {\\n        display: block;\\n        position: fixed;\\n        z-index: 1000;\\n        background-color: #fff; }\\n        .off-canvas-menu.off-canvas-menu-left {\\n          top: 0;\\n          left: 0;\\n          bottom: 0;\\n          transform: translate(-100%, 0);\\n          width: 75%; }\\n        .off-canvas-menu.off-canvas-menu-right {\\n          top: 0;\\n          right: 0;\\n          bottom: 0;\\n          transform: translate(100%, 0);\\n          width: 75%; }\\n        .off-canvas-menu.off-canvas-menu-top {\\n          top: 0;\\n          left: 0;\\n          right: 0;\\n          transform: translate(0, -100%);\\n          height: 75%; }\\n        .off-canvas-menu.off-canvas-menu-bottom {\\n          left: 0;\\n          right: 0;\\n          bottom: 0;\\n          transform: translate(0, 100%);\\n          height: 75%; }\\n    \"],\n    directives: [CORE_DIRECTIVES, OffCanvasMenuClose],\n    animations: [\n        trigger(\"open\", [\n            state(\"open\", style({transform: \"translate(0,0)\"})),\n            transition(\"void => open\", [animate(\"200ms ease\")]),\n            transition(\"open => void\", [animate(\"200ms ease\")])\n        ]),\n        trigger(\"fade\", [\n            state(\"in\", style({opacity: \".75\"})),\n            transition(\"void => in\", [animate(\"200ms ease\")]),\n            transition(\"in => void\", [animate(\"200ms ease\")])\n        ])\n    ]\n})\nexport class OffCanvasMenu implements OnInit, OnDestroy, AfterContentInit {\n    @Input()\n    origin: \"left\" | \"top\" | \"right\" | \"bottom\" = \"left\";\n\n    @Input()\n    width = \"25%\";\n\n    @Input()\n    height = \"25%\";\n\n\t@Output() \n    close:EventEmitter<any> = new EventEmitter<any>();\n\t@Output() \n    open:EventEmitter<any> = new EventEmitter<any>();\n\n    computedWidth = this.width;\n    computedHeight = this.height;\n\n    @ContentChildren(OffCanvasMenuClose)\n    closeButtons: QueryList<OffCanvasMenuClose>;\n\n    isOpen = false;\n\n    overlayState: \"in\" = null;\n    openState: \"open\" = null;\n\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        \n    }\n\n    ngAfterContentInit(): void {\n        this.closeButtons.map(b => b.close.subscribe(() => this.toggleMenu()));        \n    }\n\n    ngOnDestroy(): void {\n\n    }\n\n    toggleMenu(): void {\n        this.isOpen = !this.isOpen;\n\n        if(this.isOpen) {\n            this.overlayState = \"in\";\n            this.openState = \"open\";\n            this.open.next(null);\n        } else {\n            this.overlayState = null;\n            this.openState = null;\n            this.close.next(null);\n        }\n\n        if(this.origin == \"left\" || this.origin == \"right\") {\n            this.computedHeight = \"100%\";\n            this.computedWidth = this.width;\n        }\n        else if(this.origin == \"top\" || this.origin == \"bottom\") {\n            this.computedWidth = \"100%\";\n            this.computedHeight = this.height;\n        }\n    }\n}\n\nexport let OFF_CANVAS_MENU_PROVIDERS = [\n    OffCanvasMenu,\n    OffCanvasMenuClose\n]"],"sourceRoot":"/source/"}