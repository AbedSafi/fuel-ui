{"version":3,"sources":["components/Tab/TabSet.ts"],"names":[],"mappings":"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","file":"components/Tab/TabSet.js","sourcesContent":["import {Component, OnInit, OnDestroy, Input, Output} from 'angular2/core';\nimport {NgClass} from 'angular2/common';\nimport {Tab} from './Tab';\n\n@Component({\n    selector: 'tabset',\n    directives: [NgClass],\n    template: \"\\n      <ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\" (click)=\\\"$event.preventDefault()\\\">\\n          <li *ngFor=\\\"let tab of tabs\\\" class=\\\"nav-item\\\"\\n              [class.active]=\\\"tab.active\\\" [class.disabled]=\\\"tab.disabled\\\">\\n              <a href class=\\\"nav-link\\\" [class.active]=\\\"tab.active\\\" \\n                  [class.disabled]=\\\"tab.disabled\\\" (click)=\\\"tab.active = true\\\">\\n                  <span [innerHtml]=\\\"tab.heading\\\"></span>\\n                  <span *ngIf=\\\"tab.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tab);\\\">\\n                      <i class=\\\"fa fa-remove\\\"></i>\\n                  </span>\\n              </a>\\n          </li>\\n      </ul>\\n      <div class=\\\"tab-content\\\">\\n          <ng-content></ng-content>\\n      </div>\\n    \"\n})\nexport class TabSet implements OnInit, OnDestroy {\n\n    @Input()\n    public get vertical():boolean { return this._vertical;};\n    public set vertical(value:boolean) {\n        this._vertical = value;\n        this.setClassMap();\n    }\n    protected _vertical:boolean;\n\n    @Input()\n    public get type():string {return this._type;};\n    public set type(value:string) {\n        this._type = value;\n        this.setClassMap();\n    }\n    protected _type:string;\n\n    public tabs:Array<Tab> = [];\n    private destroyed:boolean;\n    private classMap:any = {};\n\n    public ngOnInit():void {\n        this.type = this.type !== 'undefined' ? this.type : 'tabs';\n    }\n\n    public ngOnDestroy():void {\n        this.destroyed = true;\n    }\n\n    public addTab(tab:Tab):void {\n        this.tabs.push(tab);\n        tab.active = this.tabs.length === 1 && tab.active !== false;\n    }\n\n    public removeTab(tab:Tab):void {\n        let index = this.tabs.indexOf(tab);\n        if (index === -1 || this.destroyed) {\n            return;\n        }\n\n        if (tab.active && this.hasAvailableTabs(index)) {\n            let newActiveIndex = this.getClosestTabIndex(index);\n            this.tabs[newActiveIndex].active = true;\n        }\n\n        tab.remove.next(tab);\n        this.tabs.splice(index, 1);\n    }\n\n    private getClosestTabIndex(index:number):number {\n        let tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return -1;\n        }\n\n        for (let step = 1; step <= tabsLength; step += 1) {\n            let prevIndex = index - step;\n            let nextIndex = index + step;\n            if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n                return prevIndex;\n            }\n            if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n                return nextIndex;\n            }\n        }\n        return -1;\n    }\n\n    private hasAvailableTabs(index:number):boolean {\n        let tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return false;\n        }\n\n        for (let i = 0; i < tabsLength; i += 1) {\n            if (!this.tabs[i].disabled && i !== index) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private setClassMap():void {\n        this.classMap = {\n            'nav-stacked': this.vertical,\n            ['nav-' + (this.type || 'tabs')]: true\n        };\n    }\n}"],"sourceRoot":"/source/"}