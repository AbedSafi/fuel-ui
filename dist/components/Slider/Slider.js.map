{"version":3,"sources":["components/Slider/Slider.ts"],"names":[],"mappings":"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","file":"components/Slider/Slider.js","sourcesContent":["/// <reference path=\"../../../typings/nouislider/nouislider.d.ts\" />\n\nimport {Component, Input, AfterViewInit, ElementRef, Output, EventEmitter, OnChanges} from \"angular2/core\";\nimport {CORE_DIRECTIVES} from \"angular2/common\";\nimport \"./NoUiSlider.js\";\nimport {noUiSlider} from \"nouislider\";\n\n@Component({\n    selector: \"slider\",\n    template: \"\\n\\n      <div class=\\\"slider\\\"></div>\\n    \"\n})\n\nexport class Slider implements AfterViewInit, OnChanges {\n    @Input() background: string = \"#E24932\";\n    @Input() height: string = \"\";\n    @Input() width: string = \"\";\n    @Input() orientation: string = \"horizontal\";\n    @Input() direction: string = \"ltr\";\n    @Input() behavior: string = \"tap\";\n    @Input() pips: number = 5;\n    @Input() pipDensity: number = 5;\n    @Input() step: number = 1;\n    @Input() decimals: number = 0;\n    @Input() minValue: number = 0;\n    @Input() maxValue: number = 100;\n    @Input() margin: number = 10;\n    @Input() value: number = 0;\n    @Input() secondValue: number = null;\n    @Output() valueChange = new EventEmitter<any>();\n    @Output() secondValueChange = new EventEmitter<any>();\n    sliderElement: any;\n    slider: any;\n    \n    constructor(public element: ElementRef) {}\n    \n    ngAfterViewInit(){\n        this.sliderElement = this.element.nativeElement.children[0];\n        \n        if(this.orientation == 'vertical')\n            this.sliderElement.style.height = this.height.length > 0 \n                ? this.height\n                : \"200px\";\n            \n        if(this.orientation == 'horizontal')\n            this.sliderElement.style.width = this.width.length > 0 \n                ? this.width\n                : null; //full width\n        \n        this.slider = noUiSlider.create(this.sliderElement, {\n            start: this.secondValue != null ? [this.value, this.secondValue] : this.value, // Handle start position\n            step: parseInt(this.step.toString()), // Slider increment\n            margin: this.margin, // Handles must be more than '10' apart\n            connect: this.secondValue != null ? true : 'lower', // Display a colored bar between the handles\n            direction: this.direction, // 'ltr': left to right, 'rtl': right to left\n            orientation: this.orientation, // horizontal or vertical\n            behaviour: this.behavior, // \"tap\" or \"fixed\"\n            range: { // Slider can select min to max\n                'min': parseInt(this.minValue.toString()),\n                'max': parseInt(this.maxValue.toString())\n            },\n            pips: { // Show a scale with the slider\n                mode: 'count',\n                values: this.pips,\n                density: this.pipDensity\n            },\n            format: {\n                to: ( value:string ) => {\n                    return parseFloat(value).toFixed(this.decimals)\n                },\n                from: ( value:string ) => {\n                    return parseFloat(value).toFixed(this.decimals);\n                }\n            }\n        });\n        \n        if(!(<HTMLInputElement>this.element.nativeElement).disabled){\n            var noUI:HTMLCollection = this.element.nativeElement.getElementsByClassName('noUi-connect');\n            \n            //convert HTMLCollection to array to loop\n            [].slice.call(noUI).forEach((el:HTMLElement) => {\n                el.style.background = this.background;\n            });\n        }\n        \n        this.sliderElement.noUiSlider.on('slide', (val: number[]) => {\n            this.value = val[0];\n            this.secondValue = val.length > 1 ? val[1] : null;\n            this.valueChange.next(val[0]);\n            this.secondValueChange.next(this.secondValue);\n        });\n    }\n    \n    ngOnChanges(changes:any):void{\n        if(this.sliderElement && typeof changes.value !== 'undefined')\n            this.sliderElement.noUiSlider.set([changes.value.currentValue, this.secondValue]);\n            \n        if(this.sliderElement && typeof changes.secondValue !== 'undefined')\n            this.sliderElement.noUiSlider.set([this.value, changes.secondValue.currentValue]);\n    }\n}\n\nexport var SLIDER_COMPONENT_PROVIDERS = [\n    Slider\n];\n"],"sourceRoot":"/source/"}