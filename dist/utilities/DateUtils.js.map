{"version":3,"sources":["utilities/DateUtils.ts"],"names":[],"mappings":";AAAA;IAAA;IAYA,CAAC;IAXc,qBAAW,GAAzB,UAA0B,KAAU;QACnC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,eAAe;eAC5D,CAAC,KAAK,CAAQ,KAAM,CAAC,OAAO,EAAE,CAAC,IAAW,KAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAEa,yBAAe,GAA7B,UAA8B,KAAU;QACjC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC;QAEjB,MAAM,CAAC,IAAI,IAAI,CAAS,KAAK,CAAC,CAAC;IACnC,CAAC;IACL,gBAAC;AAAD,CAZA,AAYC,IAAA;AAZY,iBAAS,YAYrB,CAAA","file":"utilities/DateUtils.js","sourcesContent":["export class DateUtils {\n\tpublic static isValidDate(value: any): boolean {\t\t\n\t\treturn Object.prototype.toString.call(value) === \"[object Date]\"\n\t\t\t&& !isNaN((<Date>value).valueOf()) && (<Date>value).getTime() != 0;\n\t}\n\t\n\tpublic static handleDateInput(value: any): Date {\n        if (DateUtils.isValidDate(value))\n            return value;\n        \n        return new Date(<string>value);\n    }\t\n}"],"sourceRoot":"/source/"}