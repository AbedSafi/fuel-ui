{"version":3,"sources":["pipes/Range/Range.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;;AAEH,qBAAkC,eAAe,CAAC,CAAA;AAMlD;IAAA;IAUA,CAAC;IATG,6BAAS,GAAT,UAAU,KAAS,EAAE,GAAe,EAAE,GAAe,EAAE,IAAgB;QAAlD,mBAAe,GAAf,OAAe;QAAE,mBAAe,GAAf,OAAe;QAAE,oBAAgB,GAAhB,QAAgB;QAEnE,IAAI,QAAQ,GAAS,EAAE,CAAC;QAExB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI;YACjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAErB,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAbL;QAAC,WAAI,CAAC;YACF,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,KAAK;SACd,CAAC;;iBAAA;IAWF,gBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,iBAAS,YAUrB,CAAA;AAEU,uBAAe,GAAG;IACzB,SAAS;CACZ,CAAC","file":"pipes/Range/Range.js","sourcesContent":["/*\n * Example use\n *\t\tBasic Array of single type: *ngFor=\"let n of someBlankArray | 0 : 9\"\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'range',\n    pure: false\n})\nexport class RangePipe implements PipeTransform {\n    transform(value:any, min: number = 0, max: number = 4, step: number = 1){\n        \n        var newValue:any[] = [];\n\n        for (var i = min; i <= max; i += step)\n            newValue.push(i);\n\n        return newValue;\n    }\n}\n\nexport var RANGE_PROVIDERS = [\n    RangePipe\n];"],"sourceRoot":"/source/"}