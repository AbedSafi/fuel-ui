{"version":3,"sources":["pipes/OrderBy/OrderBy.ts"],"names":["OrderBy","OrderBy.constructor","OrderBy.transform"],"mappings":"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","file":"pipes/OrderBy/OrderBy.js","sourcesContent":["/*\n * Example use\n *\t\tBasic Array of single type: *ng-for=\"#todo of todoService.todos | orderBy : 'desc'\"\n *\t\tMultidimensional Array Sort on single column: *ng-for=\"#todo of todoService.todos | orderBy : 'asc' : 'status'\"\n *\t\tMultidimensional Array Sort on multiple columns: *ng-for=\"#todo of todoService.todos | orderBy : 'asc' : ['status', 'title']\"\n */\n\nimport {Pipe} from \"angular2/angular2\";\n\n@Pipe({\n    name: 'orderBy',\n    pure: false\n})\nexport class OrderBy{\n    transform(value:any, config:any = ['asc', null]){\n\n        if(!Array.isArray(value)) return value;\n\n        var newValue:any[] = [];\n\n        var sort = config[0];\n        var property = config[1];\n\n        if(property == null || property == ''){\n            //Basic array\n            newValue = sort == 'asc' ? value.sort() : value.sort().reverse();\n        }\n        else if(!Array.isArray(property)){\n            //Single property to sort by, only look for that\n            newValue = value.sort(function(a:any,b:any){\n                if (a[property] === b[property]) {\n                    return 0;\n                }\n                else {\n                    //Lowercase strings and parse numbers\n                    if((isNaN(parseFloat(a[property])) || isFinite(a[property]))\n                        || (isNaN(parseFloat(b[property])) || isFinite(b[property]))){\n                        a[property] = a[property].toLowerCase();\n                        b[property] = b[property].toLowerCase();\n                    }\n                    else{\n                        a[property] = parseFloat(a[property]);\n                        b[property] = parseFloat(b[property]);\n                    }\n\n                    if(sort == 'asc'){\n                        return (a[property] < b[property]) ? -1 : 1;\n                    }\n                    else{\n                        return (a[property] > b[property]) ? -1 : 1;\n                    }\n                }\n            });\n        }\n        else{\n            //Loop over property array in order and sort\n            newValue = value.sort(function(a:any,b:any){\n                for(var i:number = 0; i < property.length; i++){\n                    //Lowercase strings and parse numbers\n                    if((isNaN(parseFloat(a[property[i]])) || isFinite(a[property[i]]))\n                        || (isNaN(parseFloat(b[property[i]])) || isFinite(b[property[i]]))){\n                        a[property[i]] = a[property[i]].toLowerCase();\n                        b[property[i]] = b[property[i]].toLowerCase();\n                    }\n                    else{\n                        a[property[i]] = parseFloat(a[property[i]]);\n                        b[property[i]] = parseFloat(b[property[i]]);\n                    }\n\n                    if(sort == 'asc'){\n                        if(a[property[i]] < b[property[i]]) return -1;\n                        if(a[property[i]] > b[property[i]]) return 1;\n                    }\n                    else{\n                        if(a[property[i]] > b[property[i]]) return -1;\n                        if(a[property[i]] < b[property[i]]) return 1;\n                    }\n                }\n\n                return 0; //equal each other\n            });\n        }\n        return newValue;\n    }\n}\n\nexport var ORDERBY_PROVIDERS = [\n    OrderBy\n];"],"sourceRoot":"/source/"}