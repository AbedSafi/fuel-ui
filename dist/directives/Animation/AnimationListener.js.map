{"version":3,"sources":["directives/Animation/AnimationListener.ts"],"names":["AnimationListener","AnimationListener.constructor","AnimationListener.animationStarted","AnimationListener.animationEnded"],"mappings":";;;;;;;;;;;AAAA,yBAA8C,mBAAmB,CAAC,CAAA;AAElE;IAiBIA;QAHUC,mBAAcA,GAAiBA,IAAIA,uBAAYA,EAAEA,CAACA;QAClDA,iBAAYA,GAAiBA,IAAIA,uBAAYA,EAAEA,CAACA;IAG1DA,CAACA;IAEDD,4CAAgBA,GAAhBA,UAAiBA,MAAaA;QAC1BE,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;IACrCA,CAACA;IAEDF,0CAAcA,GAAdA,UAAeA,MAAaA;QACxBG,IAAIA,CAACA,YAAYA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;IACnCA,CAACA;IAZDH;QAACA,iBAAMA,EAAEA;;OAACA,6CAAcA,EAAoCA;IAC5DA;QAACA,iBAAMA,EAAEA;;OAACA,2CAAYA,EAAoCA;IAf9DA;QAACA,oBAASA,CAACA;YACPA,QAAQA,EAAEA,aAAaA;YACvBA,IAAIA,EAAEA;gBACFA,kBAAkBA,EAAEA,0BAA0BA;gBAC9CA,wBAAwBA,EAAEA,0BAA0BA;gBACpDA,mBAAmBA,EAAEA,0BAA0BA;gBAC/CA,oBAAoBA,EAAEA,0BAA0BA;gBAChDA,gBAAgBA,EAAEA,wBAAwBA;gBAC1CA,sBAAsBA,EAAEA,wBAAwBA;gBAChDA,iBAAiBA,EAAEA,wBAAwBA;gBAC3CA,kBAAkBA,EAAEA,wBAAwBA;aAC/CA;SACJA,CAACA;;0BAeDA;IAADA,wBAACA;AAADA,CA3BA,AA2BCA,IAAA;AAdY,yBAAiB,oBAc7B,CAAA;AAEU,oCAA4B,GAAG;IACtC,iBAAiB;CACpB,CAAC","file":"directives/Animation/AnimationListener.js","sourcesContent":["import {Directive, Output, EventEmitter} from 'angular2/angular2';\n\n@Directive({\n    selector: '[.animated]',\n    host: {\n        '(animationstart)': 'animationStarted($event)',\n        '(webkitAnimationStart)': 'animationStarted($event)',\n        '(oanimationstart)': 'animationStarted($event)',\n        '(MSAnimationStart)': 'animationStarted($event)',\n        '(animationend)': 'animationEnded($event)',\n        '(webkitAnimationEnd)': 'animationEnded($event)',\n        '(oanimationend)': 'animationEnded($event)',\n        '(MSAnimationEnd)': 'animationEnded($event)'\n    }\n})\nexport class AnimationListener {\n    @Output() animationStart: EventEmitter = new EventEmitter();\n    @Output() animationEnd: EventEmitter = new EventEmitter();\n\n    constructor() {\n    }\n\n    animationStarted($event: Event): void {\n        this.animationStart.next($event);\n    }\n\n    animationEnded($event: Event): void {\n        this.animationEnd.next($event);\n    }\n}\n\nexport var ANIMATION_LISTENER_PROVIDERS = [\n    AnimationListener\n];"],"sourceRoot":"/source/"}