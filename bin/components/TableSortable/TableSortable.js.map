{"version":3,"sources":["components/TableSortable/TableSortable.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwD,eACxD,CAAC,CADsE;AACvE,uBAAwC,iBACxC,CAAC,CADwD;AACzD,wBAA0B,6BAC1B,CAAC,CADsD;AACvD,8BAAgC,yCAChC,CAAC,CADwE;AACzE,uBAAyB,2BACzB,CAAC,CADmD;AAEpD,qCAAmC,wBAAwB,CAAC,CAAA;AAQ5D;IAME;IAAe,CAAC;IAEhB,qCAAa,GAAb,UAAc,UAAkB;QAC9B,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACjG,CAAC;IAED,qCAAa,GAAb,UAAc,UAAkB;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1E,CAAC;IAtBD;QAAC,YAAK,EAAE;;kDAAA;IACR;QAAC,YAAK,EAAE;;+CAAA;IACR;QAAC,YAAK,EAAE;;+CAAA;IAVV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,ymBAAymB;YACnnB,UAAU,EAAE,CAAC,wBAAe,CAAC;YAC7B,KAAK,EAAE,CAAC,qBAAW,EAAE,iBAAQ,EAAE,iCAAiB,EAAE,mBAAU,CAAC;SAC9D,CAAC;;qBAAA;IA0BF,oBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,qBAAa,gBAyBzB,CAAA;AAEU,+BAAuB,GAAG;IACjC,aAAa;CAChB,CAAC;AACF,oCAAkC,uBAAuB,CAAC;AAAlD,wEAAkD;AAC1D,qCAAmC,wBAAwB,CAAC;AAApD,2EAAoD","file":"components/TableSortable/TableSortable.js","sourcesContent":["import {Component, ChangeDetectionStrategy, Input} from 'angular2/core'\nimport {CORE_DIRECTIVES, JsonPipe} from 'angular2/common'\nimport {OrderByPipe} from \"../../pipes/OrderBy/OrderBy\"\nimport {MapToIterablePipe} from \"../../pipes/MapToIterable/MapToIterable\"\nimport {FormatPipe} from \"../../pipes/Format/Format\"\nimport {TableSortableColumn} from \"./TableSortableColumn\";\nimport {TableSortableSorting} from \"./TableSortableSorting\";\n\n@Component({\n  selector: 'table-sortable',\n  template: \"\\n    <table class=\\\"table table-hover table-striped table-sortable\\\">\\n      <thead>\\n        <tr>\\n          <th *ngFor=\\\"#column of columns\\\" [class]=\\\"selectedClass(column.variable)\\\" (click)=\\\"changeSorting(column.variable)\\\">\\n            {{column.display}}\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"#object of data | orderBy : convertSorting()\\\">\\n            <td *ngFor=\\\"#key of object | mapToIterable; #i = index\\\">\\n                {{object[columns[i].variable] | format : columns[i].filter }}\\n            </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  \",\n  directives: [CORE_DIRECTIVES],\n  pipes: [OrderByPipe, JsonPipe, MapToIterablePipe, FormatPipe]\n})\nexport class TableSortable {\n  \n  @Input() columns: TableSortableColumn[];\n  @Input() data: any[];\n  @Input() sort: TableSortableSorting;\n    \n  constructor() {}\n  \n  selectedClass(columnName: string): string{\n    return columnName == this.sort.column ? 'sort-' + (this.sort.descending ? 'desc' : 'asc') : '';\n  }\n  \n  changeSorting(columnName: string): void{\n    var sort = this.sort;\n    if (sort.column == columnName) {\n      sort.descending = !sort.descending;\n    } else {\n      sort.column = columnName;\n      sort.descending = false;\n    }\n  }\n  \n  convertSorting(): string{\n    return this.sort.descending ? '-' + this.sort.column : this.sort.column;\n  }\n}\n\nexport var TABLESORTABLE_PROVIDERS = [\n    TableSortable\n];\nexport {TableSortableColumn} from \"./TableSortableColumn\";\nexport {TableSortableSorting} from \"./TableSortableSorting\";"],"sourceRoot":"/source/"}