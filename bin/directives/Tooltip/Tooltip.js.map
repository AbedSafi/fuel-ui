{"version":3,"sources":["directives/Tooltip/Tooltip.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyF,eAAe,CAAC,CAAA;AAazG;IAII,iBAAY,EAAc;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC;IAChC,CAAC;IAED,4BAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,sBAAI,GAAJ;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,IAAI,IAAI,GAAG,yKAIR,GAAG,IAAI,CAAC,IAAI,GAAG,8CAGjB,CAAC;QAEF,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,KAAK,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAC7C,KAAK,CAAC,SAAS,GAAG,oGAGf,GAAG,IAAI,CAAC,IAAI,GAAG,oBACT,CAAC;QACV,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAChD,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,EACpD,MAAM,GAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC;QAElE,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;QAC5B,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC;QAChC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QAExC,IAAI,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEzC,CAAC;IAED,sBAAI,GAAJ;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAEnE,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YACrC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAjEL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,UAAU,EAAE;gBACR,eAAe;aAClB;YACD,IAAI,EAAE;gBACF,aAAa,EAAE,QAAQ;gBACvB,YAAY,EAAE,QAAQ;aACzB;SACJ,CAAC;;eAAA;IAyDF,cAAC;AAAD,CAxDA,AAwDC,IAAA;AAxDY,eAAO,UAwDnB,CAAA;AAEU,yBAAiB,GAAG;IAC3B,OAAO;CACV,CAAC","file":"directives/Tooltip/Tooltip.js","sourcesContent":["import {Directive, ElementRef, Input, Output, EventEmitter, ViewContainerRef, View} from 'angular2/core';\nimport {CORE_DIRECTIVES} from 'angular2/common';\n\n@Directive({\n    selector: '[tooltip]',\n    properties: [\n        'text: tooltip'\n    ],\n    host: {\n        '(mouseover)': 'show()',\n        '(mouseout)': 'hide()'\n    }\n})\nexport class Tooltip {\n    text:string;\n    private _el:HTMLElement;\n\n    constructor(el: ElementRef) {\n        this._el = el.nativeElement;\n    }\n\n    getElement(): HTMLElement{\n        return this._el;\n    }\n\n    show() {\n        this.hide();\n\n        var html = `\n        <div class=\"tooltip top customFadeIn\" role=\"tooltip\">\n          <div class=\"tooltip-arrow\"></div>\n          <div class=\"tooltip-inner\">\n          ` + this.text + `\n          </div>\n        </div>\n        `;\n\n        var newEl = document.createElement('div');\n        newEl.setAttribute('role', 'tooltip');\n        newEl.className = 'tooltip top customFadeIn';\n        newEl.innerHTML = `\n        <div class=\"tooltip-arrow\"></div>\n          <div class=\"tooltip-inner\">\n          ` + this.text + `\n          </div>`;\n        newEl.style.visibility = \"hidden\";\n        this.getElement().appendChild(newEl);\n\n        var bodyRect = document.body.getBoundingClientRect(),\n            elemRect = this.getElement().getBoundingClientRect(),\n            offset   = (elemRect.top - bodyRect.top) - newEl.offsetHeight;\n\n        this.hide();\n\n        newEl.style.visibility = \"\";\n        newEl.style.top = offset + 'px';\n        newEl.style.left = elemRect.left + 'px';\n\n        this.getElement().appendChild(newEl);\n\n    }\n\n    hide() {\n        var tooltips = this.getElement().getElementsByClassName('tooltip');\n\n        for(var i = 0; i < tooltips.length; i++){\n            tooltips[i].remove();\n        }\n    }\n}\n\nexport var TOOLTIP_PROVIDERS = [\n    Tooltip\n];"],"sourceRoot":"/source/"}